//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.OpenManipulator
{
    [Serializable]
    public class JointPositionMsg : Message
    {
        public const string k_RosMessageName = "open_manipulator_msgs/JointPosition";
        public override string RosMessageName => k_RosMessageName;

        public string[] joint_name;
        public double[] position;
        public double max_accelerations_scaling_factor;
        public double max_velocity_scaling_factor;

        public JointPositionMsg()
        {
            this.joint_name = new string[0];
            this.position = new double[0];
            this.max_accelerations_scaling_factor = 0.0;
            this.max_velocity_scaling_factor = 0.0;
        }

        public JointPositionMsg(string[] joint_name, double[] position, double max_accelerations_scaling_factor, double max_velocity_scaling_factor)
        {
            this.joint_name = joint_name;
            this.position = position;
            this.max_accelerations_scaling_factor = max_accelerations_scaling_factor;
            this.max_velocity_scaling_factor = max_velocity_scaling_factor;
        }

        public static JointPositionMsg Deserialize(MessageDeserializer deserializer) => new JointPositionMsg(deserializer);

        private JointPositionMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.joint_name, deserializer.ReadLength());
            deserializer.Read(out this.position, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.max_accelerations_scaling_factor);
            deserializer.Read(out this.max_velocity_scaling_factor);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.joint_name);
            serializer.Write(this.joint_name);
            serializer.WriteLength(this.position);
            serializer.Write(this.position);
            serializer.Write(this.max_accelerations_scaling_factor);
            serializer.Write(this.max_velocity_scaling_factor);
        }

        public override string ToString()
        {
            return "JointPositionMsg: " +
            "\njoint_name: " + System.String.Join(", ", joint_name.ToList()) +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\nmax_accelerations_scaling_factor: " + max_accelerations_scaling_factor.ToString() +
            "\nmax_velocity_scaling_factor: " + max_velocity_scaling_factor.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
